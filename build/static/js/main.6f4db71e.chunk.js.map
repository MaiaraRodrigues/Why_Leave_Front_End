{"version":3,"sources":["components/map/mapStyles.js","components/map/map.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["mapCanvas","featureType","elementType","stylers","weight","saturation","lightness","hue","gamma","visibility","color","WrappedMap","withScriptjs","withGoogleMap","useState","selectedCountry","setSelectedCountry","defaultZoom","defaultCenter","lat","lng","defaultOptions","styles","mapStyles","jsonData","map","country","position","latitude","longitude","population","onClick","icon","url","scaledSize","window","google","maps","Size","id","onCloseClick","Map","style","width","height","googleMapURL","process","loadingElement","containerElement","mapElement","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f4db71e.chunk.js","sourcesContent":["export default function mapCanvas() {\n  return [\n    {\n      featureType: \"administrative\",\n      elementType: \"all\",\n      stylers: [\n        {\n          weight: \"1.26\",\n        },\n        {\n          saturation: \"-100\",\n        },\n        {\n          lightness: \"-4\",\n        },\n      ],\n    },\n    {\n      featureType: \"administrative.neighborhood\",\n      elementType: \"all\",\n      stylers: [\n        {\n          weight: \"2.42\",\n        },\n        {\n          hue: \"#005aff\",\n        },\n        {\n          lightness: \"-3\",\n        },\n        {\n          saturation: \"-76\",\n        },\n        {\n          gamma: \"0.87\",\n        },\n      ],\n    },\n    {\n      featureType: \"administrative.neighborhood\",\n      elementType: \"labels\",\n      stylers: [\n        {\n          visibility: \"on\",\n        },\n        {\n          saturation: \"-11\",\n        },\n        {\n          lightness: \"6\",\n        },\n      ],\n    },\n    {\n      featureType: \"landscape.man_made\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#f7f1df\",\n        },\n        {\n          saturation: \"-22\",\n        },\n        {\n          lightness: \"22\",\n        },\n        {\n          gamma: \"1.00\",\n        },\n      ],\n    },\n    {\n      featureType: \"landscape.natural\",\n      elementType: \"all\",\n      stylers: [\n        {\n          saturation: \"32\",\n        },\n        {\n          lightness: \"10\",\n        },\n      ],\n    },\n    {\n      featureType: \"poi\",\n      elementType: \"labels\",\n      stylers: [\n        {\n          visibility: \"on\",\n        },\n      ],\n    },\n    {\n      featureType: \"poi.attraction\",\n      elementType: \"labels\",\n      stylers: [\n        {\n          visibility: \"on\",\n        },\n        {\n          lightness: \"12\",\n        },\n        {\n          saturation: \"-27\",\n        },\n        {\n          gamma: \"1.00\",\n        },\n        {\n          weight: \"0.87\",\n        },\n      ],\n    },\n    {\n      featureType: \"poi.business\",\n      elementType: \"all\",\n      stylers: [\n        {\n          visibility: \"off\",\n        },\n      ],\n    },\n    {\n      featureType: \"poi.business\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          visibility: \"on\",\n        },\n      ],\n    },\n    {\n      featureType: \"poi.business\",\n      elementType: \"geometry.fill\",\n      stylers: [\n        {\n          saturation: \"18\",\n        },\n        {\n          hue: \"#ffc100\",\n        },\n        {\n          lightness: \"15\",\n        },\n      ],\n    },\n    {\n      featureType: \"poi.park\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#bde6ab\",\n        },\n      ],\n    },\n    {\n      featureType: \"poi.sports_complex\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          hue: \"#ff8200\",\n        },\n        {\n          gamma: \"1.13\",\n        },\n        {\n          lightness: \"-13\",\n        },\n        {\n          saturation: \"71\",\n        },\n      ],\n    },\n    {\n      featureType: \"road\",\n      elementType: \"geometry.stroke\",\n      stylers: [\n        {\n          visibility: \"on\",\n        },\n        {\n          lightness: \"88\",\n        },\n      ],\n    },\n    {\n      featureType: \"road\",\n      elementType: \"labels\",\n      stylers: [\n        {\n          visibility: \"off\",\n        },\n      ],\n    },\n    {\n      featureType: \"road.highway\",\n      elementType: \"geometry.fill\",\n      stylers: [\n        {\n          color: \"#ffe15f\",\n        },\n      ],\n    },\n    {\n      featureType: \"road.highway\",\n      elementType: \"geometry.stroke\",\n      stylers: [\n        {\n          color: \"#efd151\",\n        },\n      ],\n    },\n    {\n      featureType: \"road.highway\",\n      elementType: \"labels\",\n      stylers: [\n        {\n          saturation: \"-63\",\n        },\n        {\n          lightness: \"30\",\n        },\n        {\n          gamma: \"0.95\",\n        },\n        {\n          weight: \"2.76\",\n        },\n      ],\n    },\n    {\n      featureType: \"road.arterial\",\n      elementType: \"geometry.fill\",\n      stylers: [\n        {\n          color: \"#ffffff\",\n        },\n      ],\n    },\n    {\n      featureType: \"road.arterial\",\n      elementType: \"labels\",\n      stylers: [\n        {\n          visibility: \"on\",\n        },\n        {\n          lightness: \"30\",\n        },\n      ],\n    },\n    {\n      featureType: \"road.local\",\n      elementType: \"geometry.fill\",\n      stylers: [\n        {\n          color: \"black\",\n        },\n      ],\n    },\n    {\n      featureType: \"road.local\",\n      elementType: \"labels\",\n      stylers: [\n        {\n          visibility: \"on\",\n        },\n        {\n          saturation: \"-77\",\n        },\n        {\n          lightness: \"40\",\n        },\n      ],\n    },\n    {\n      featureType: \"transit.station.airport\",\n      elementType: \"geometry.fill\",\n      stylers: [\n        {\n          lightness: \"23\",\n        },\n        {\n          saturation: \"-38\",\n        },\n      ],\n    },\n    {\n      featureType: \"water\",\n      elementType: \"geometry\",\n      stylers: [\n        {\n          color: \"#a2daf2\",\n        },\n      ],\n    },\n  ];\n}\n","import React, { useState } from \"react\";\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  Marker,\n  InfoWindow,\n} from \"react-google-maps\";\nimport jsonData from \"../../data/heroku.json\";\nimport mapStyles from \"./mapStyles.js\";\n\nfunction GoogleMaps() {\n  const [selectedCountry, setSelectedCountry] = useState(null);\n\n  return (\n    <GoogleMap\n      defaultZoom={2.5}\n      defaultCenter={{ lat: 51.39305, lng: -0.30432 }}\n      defaultOptions={{ styles: mapStyles.mapCanvas }}\n    >\n      {jsonData.map((country) => (\n        <Marker\n          key={country.id}\n          position={{\n            lat: country.latitude,\n            lng: country.longitude,\n            population: country.population,\n          }}\n          onClick={() => {\n            setSelectedCountry(country);\n          }}\n          icon={{\n            url: 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Flag_of_Syria.svg/1280px-Flag_of_Syria.svg.png',\n            scaledSize: new window.google.maps.Size(40, 30),\n          }}\n        />\n      ))}\n\n      {selectedCountry && (\n        <InfoWindow\n          position={{\n            lat: selectedCountry.latitude,\n            lng: selectedCountry.longitude,\n          }}\n          onCloseClick={() => {\n            setSelectedCountry(null);\n          }}\n        >\n          <div>\n            <h2>{selectedCountry.country}</h2>\n            <p>{selectedCountry.population}</p>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n}\n\nconst WrappedMap = withScriptjs(withGoogleMap(GoogleMaps));\n\nfunction Map() {\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <WrappedMap\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${process.env.REACT_APP_GOOGLE_KEY}`}\n        loadingElement={<div style={{ height: \"100%\" }} />}\n        containerElement={<div style={{ height: \"100%\" }} />}\n        mapElement={<div style={{ height: \"100%\" }} />}\n      />\n    </div>\n  );\n}\n\nexport default Map;","import React from 'react';\nimport './App.css'\nimport Map from '../map/map.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Map />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}